<script src= "script.js"></script>
## Minecraft Resource Pack Hosting

This page is intended as a start-to-finish guide for hosting a basic Minecraft [resource pack](!Resource packs in Minecraft allow you to control the visuals, sounds, and other aesthetics for the game in a lot of detail.) and adding it to a map. Each section is self-contained: if a step doesn't apply to you, or you don't need help with it, feel free to skip any of them.

We'll be using [GitHub](https://github.com) to host our pack. If you don't yet have an account, sign up [here](https://github.com/signup).

"""info #7F00B5 #EEEEEE
__**Contents:**__
<ul>
- [Step 1: Understanding the Folder Structure of a Resource Pack](#understanding-the-folder-structure)
- [Step 2: Creating your Resource Pack](#creating-your-resource-pack)
- [Step 3: Structuring Pack Meta Files](#structuring-pack-meta-files)
- [Step 4a: Adding Textures](#adding-textures)
- [Step 4b: Adding Fonts](#adding-fonts)
- [Step 4c: Adding Sounds](#adding-sounds)
- [Step 5: Setting up a GitHub repository](#setting-up-a-github-repository)
- [Step 6: Setting up a Server Resource Pack](#setting-up-a-server-resource-pack)
- [SHA-1 Hash Calculator](#hash-calculator)
</ul>
"""

### Understanding the Folder Structure

A Minecraft Resource Pack is essentially a folder which holds a lot of files with your custom textures and resources in them. The below file tree shows how this folder is organised.

(This is originally based on the [wiki](https://minecraft.fandom.com/wiki/Resource_pack#Folder_structure)'s version. I have simplified it to omit some paths which are more complex or less relevant for server resource packs.)

```tree
[resource pack name]
- pack.mcmeta
- pack.png
- assets
  - minecraft
    - font
      - [your-font]
    - sounds.json
    - sounds
      - [sound].ogg
    - textures
      - block
        - [texture].png
      - entity
        - [texture].png
        - [entity-type]
          - [texture].png
      - item
        - [texture].png
      - painting
        - [texture].png
```

We'll go over each of these in more detail individually later on.

### Creating Your Resource Pack

To create your resource pack, start by creating a new folder with your desired resource pack name. This folder will serve as the root directory for your resource pack. Alternatively, you can <a href="example-pack.zip" download>download my example resource pack</a> and copy from there.

Inside the root folder, create the following files and folders:
<ol>
- `pack.mcmeta`: This file contains some important metadata about your resource pack: we'll get to it later.
- `pack.png`: This is the icon for your resource pack that displays in the Resource Pack Selection screen.
- `assets` folder: This folder will contain all the custom textures, sounds, and fonts for your resource pack.
</ol>
Inside the `assets` folder, create a `minecraft` subfolder, and inside it create the subfolders:
<ol>
- `font`: If you want a custom font in your pack, otherwise ignore this.
- `textures`: If you want to edit the visual appearance / texture of any block, entity, item, or anything else in the game.
- `sounds`: If you want to edit or add any sounds in the game. If you include this, make sure to also add a `sounds.json` file.
</ol>

### Structuring Pack Meta Files

The `pack.mcmeta` file is a JSON file that provides information about your resource pack. Inside it, paste the following text:

```json
{
  "pack": {
    "pack_format": 23,
    "description": "Your resource pack description goes here"
  }
}
```
Pack format 23 is valid for Minecraft version 1.20.4. To check the most recent version, you can see the [wiki](https://minecraft.fandom.com/wiki/Pack_format#Resources)'s page on pack formats.

In the description field, add the description you want to be visible in the Resource Pack Selection screen. Note that this is displayed over two lines, and cut off if it is too long.

The `pack.png` file is an optional PNG image that will be displayed as the icon for your resource pack in the selection screen. This should ideally be a small square image. If you don't include this image, the icon for your resource pack will be greyed out.

### Adding Textures

To add custom textures to your resource pack, navigate to `assets/minecraft/textures`. In here, you can create subfolders for the different texture categories, such as `block`, `entity`, `item`, and `painting`.

Place your custom texture files (which should be PNG images) inside the respective subfolders. For example, if you have a custom texture for spruce planks, place it inside the `block` folder and name it `spruce_planks.png`.

The example pack I provided should have a few files of each type. Hopefully the pattern is fairly obvious from there.

### Adding Sounds

to-write

### Adding Fonts

To add custom fonts to your resource pack, create a `font` folder inside the `assets/minecraft` folder. Inside the `font` folder, create a subfolder with your font name.

Place your custom font files (in TTF or OTF format) inside the font subfolder.

to-write

### Setting up a GitHub Repository

Once again, we'll be using [GitHub](https://github.com) to host our pack. If you still don't have an account, sign up [here](https://github.com/signup).

<ol>
- Click [here](https://github.com/new) to create a new GitHub [repository](!A repository is essentially a folder on GitHub, which stores your code or resource pack.).
- Add a repository name in the `Repository name` field: this can be anything and won't affect the resource pack itself in-game.
- Scroll down to the bottom and click the green "Create repository" button.
- Click on "upload an existing file".
- Navigate to a Finder (Mac) / File Explorer (Windows) window where you can see your resource pack folder. Drag and drop it into the main part of the GitHub browser window.
- Wait for everything to finish uploading, then scroll down and click the big green button.
</ol>

### Setting up a Server Resource Pack

to-write

### Hash Calculator

Drag and drop your zip file here to view its SHA-1 Hash. All processing is done clientside: your file is never uploaded to this website, and I cannot see it. The source code is available [here](script.js).
</p><p id="file-hash-info">You have not yet uploaded a file. Drag and drop a file anywhere on this page to see its hash.</p><p>

```hash
null
```